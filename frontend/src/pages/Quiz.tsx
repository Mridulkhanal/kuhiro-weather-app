import { useState, useEffect, useCallback } from "react";
import { useLanguage } from "../context/LanguageContext";
import "./Quiz.css";

type Question = {
  question: { en: string; ne: string };
  options: { en: string[]; ne: string[] };
  correct: number;
};

type HighScore = {
  player: string;
  score: number;
};

const easyQuestions: Question[] = [
  {
    question: {
      en: "‚òÄÔ∏è What do we call frozen water falling from the sky?",
      ne: "‚òÄÔ∏è ‡§Ü‡§ï‡§æ‡§∂‡§¨‡§æ‡§ü ‡§ñ‡§∏‡•ç‡§®‡•á ‡§ú‡§Æ‡•á‡§ï‡•ã ‡§™‡§æ‡§®‡•Ä‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Rain", "Snow", "Cloud", "Wind"],
      ne: ["‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§π‡§ø‡§â‡§Å", "‡§¨‡§æ‡§¶‡§≤", "‡§π‡§æ‡§µ‡§æ"],
    },
    correct: 1,
  },
  {
    question: {
      en: "üåßÔ∏è Which tool measures rainfall?",
      ne: "üåßÔ∏è ‡§ï‡•Å‡§® ‡§â‡§™‡§ï‡§∞‡§£‡§≤‡•á ‡§µ‡§∞‡•ç‡§∑‡§æ ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§õ?",
    },
    options: {
      en: ["Thermometer", "Rain Gauge", "Barometer", "Compass"],
      ne: ["‡§•‡§∞‡•ç‡§Æ‡§Æ‡§ø‡§ü‡§∞", "‡§∞‡•á‡§® ‡§ó‡•á‡§ú", "‡§¨‡•ç‡§Ø‡§æ‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§ï‡§Æ‡•ç‡§™‡§æ‡§∏"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a device used to measure temperature?",
      ne: "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§® ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§®‡•á ‡§â‡§™‡§ï‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Thermometer", "Barometer", "Anemometer", "Hygrometer"],
      ne: ["‡§•‡§∞‡•ç‡§Æ‡§Æ‡§ø‡§ü‡§∞", "‡§¨‡•ç‡§Ø‡§æ‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§è‡§®‡•á‡§Æ‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§π‡§æ‡§á‡§ó‡•ç‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What are stratus, cirrus, cumulus types of?",
      ne: "‡§∏‡•ç‡§ü‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡§∏, ‡§∏‡§ø‡§∞‡§∏, ‡§ï‡•ç‡§Ø‡•Å‡§Æ‡•Å‡§≤‡§∏ ‡§ï‡•Å‡§®‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§π‡•Å‡§®‡•ç?",
    },
    options: {
      en: ["Clouds", "Winds", "Rains", "Storms"],
      ne: ["‡§¨‡§æ‡§¶‡§≤", "‡§π‡§æ‡§µ‡§æ", "‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§Ü‡§Å‡§ß‡•Ä"],
    },
    correct: 0,
  },
  {
    question: {
      en: "Which country has the most tornadoes?",
      ne: "‡§ï‡•Å‡§® ‡§¶‡•á‡§∂‡§Æ‡§æ ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§ß‡•á‡§∞‡•à ‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["USA", "Australia", "India", "Canada"],
      ne: ["‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ", "‡§Ö‡§∑‡•ç‡§ü‡•ç‡§∞‡•á‡§≤‡§ø‡§Ø‡§æ", "‡§≠‡§æ‡§∞‡§§", "‡§ï‡•ç‡§Ø‡§æ‡§®‡§°‡§æ"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What color should you wear to stay cool on a hot day?",
      ne: "‡§ó‡§∞‡•ç‡§Æ‡•Ä‡§ï‡•ã ‡§¶‡§ø‡§®‡§Æ‡§æ ‡§ö‡§ø‡§∏‡•ã ‡§∞‡§π‡§® ‡§ï‡•Å‡§® ‡§∞‡§ô‡§ï‡•ã ‡§≤‡•Å‡§ó‡§æ ‡§≤‡§ó‡§æ‡§â‡§®‡•Å‡§™‡§∞‡•ç‡§õ?",
    },
    options: {
      en: ["Black", "White", "Red", "Blue"],
      ne: ["‡§ï‡§æ‡§≤‡•ã", "‡§∏‡•á‡§§‡•ã", "‡§∞‡§æ‡§§‡•ã", "‡§®‡§ø‡§≤‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the study of weather called?",
      ne: "‡§Æ‡•å‡§∏‡§Æ‡§ï‡•ã ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Geology", "Meteorology", "Biology", "Astronomy"],
      ne: ["‡§≠‡•Ç‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®", "‡§Æ‡•å‡§∏‡§Æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®", "‡§ú‡•Ä‡§µ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®", "‡§ñ‡§ó‡•ã‡§≤ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is needed to create a blizzard?",
      ne: "‡§π‡§ø‡§Æ‡§Ü‡§Å‡§ß‡•Ä ‡§¨‡§®‡§æ‡§â‡§® ‡§ï‡•á ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§õ?",
    },
    options: {
      en: ["Rain and wind", "Snow and wind", "Sun and heat", "Clouds and fog"],
      ne: ["‡§µ‡§∞‡•ç‡§∑‡§æ ‡§∞ ‡§π‡§æ‡§µ‡§æ", "‡§π‡§ø‡§â‡§Å ‡§∞ ‡§π‡§æ‡§µ‡§æ", "‡§ò‡§æ‡§Æ ‡§∞ ‡§§‡§æ‡§™", "‡§¨‡§æ‡§¶‡§≤ ‡§∞ ‡§ï‡•Å‡§π‡§ø‡§∞‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What makes the wind blow?",
      ne: "‡§π‡§æ‡§µ‡§æ‡§≤‡§æ‡§à ‡§ö‡§≤‡§æ‡§â‡§®‡•á ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Trees", "Differences in air pressure", "Ocean", "Mountains"],
      ne: ["‡§∞‡•Ç‡§ñ‡§π‡§∞‡•Ç", "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ö‡§æ‡§™‡§ï‡•ã ‡§≠‡§ø‡§®‡•ç‡§®‡§§‡§æ", "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞", "‡§™‡§π‡§æ‡§°‡§π‡§∞‡•Ç"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is fog?",
      ne: "‡§ï‡•Å‡§π‡§ø‡§∞‡•ã ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["A type of rain", "A cloud on the ground", "Snow falling", "Wind storm"],
      ne: ["‡§µ‡§∞‡•ç‡§∑‡§æ‡§ï‡•ã ‡§è‡§ï ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞", "‡§ú‡§Æ‡§ø‡§®‡§Æ‡§æ ‡§¨‡§æ‡§¶‡§≤", "‡§π‡§ø‡§â‡§Å ‡§ñ‡§∏‡•ç‡§®‡•á", "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§Ü‡§Å‡§ß‡•Ä"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is hail?",
      ne: "‡§Ö‡§∏‡§ø‡§®‡§æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Frozen rain", "Snow balls", "Ice pellets from thunderstorms", "Sleet"],
      ne: ["‡§ú‡§Æ‡•á‡§ï‡•ã ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§π‡§ø‡§â‡§Å‡§ï‡•ã ‡§ó‡•ã‡§≤‡§æ", "‡§Ü‡§Å‡§ß‡•Ä‡§¨‡§æ‡§ü ‡§¨‡§®‡•á‡§ï‡•ã ‡§¨‡§∞‡§´‡§ï‡•ã ‡§ï‡§£", "‡§π‡§ø‡§â‡§Å‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§µ‡§∞‡•ç‡§∑‡§æ"],
    },
    correct: 2,
  },
  {
    question: {
      en: "How many inches in the highest yearly snowfall on record?",
      ne: "‡§∞‡•á‡§ï‡§∞‡•ç‡§°‡§Æ‡§æ ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§ß‡•á‡§∞‡•à ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§π‡§ø‡§Æ‡§™‡§æ‡§§ ‡§ï‡§§‡§ø ‡§á‡§®‡•ç‡§ö ‡§π‡•ã?",
    },
    options: {
      en: ["29", "678", "1224", "100"],
      ne: ["‡•®‡•Ø", "‡•¨‡•≠‡•Æ", "‡•ß‡•®‡•®‡•™", "‡•ß‡•¶‡•¶"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is a rainbow caused by?",
      ne: "‡§á‡§®‡•ç‡§¶‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡•á‡§≤‡•á ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Wind", "Sunlight and rain", "Clouds", "Snow"],
      ne: ["‡§π‡§æ‡§µ‡§æ", "‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂ ‡§∞ ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§¨‡§æ‡§¶‡§≤", "‡§π‡§ø‡§â‡§Å"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What do we call a storm with strong winds and rain?",
      ne: "‡§ï‡§°‡§æ ‡§π‡§æ‡§µ‡§æ ‡§∞ ‡§µ‡§∞‡•ç‡§∑‡§æ‡§∏‡§π‡§ø‡§§‡§ï‡•ã ‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Tornado", "Hurricane", "Blizzard", "Fog"],
      ne: ["‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã", "‡§π‡§∞‡§ø‡§ï‡•á‡§®", "‡§π‡§ø‡§Æ‡§Ü‡§Å‡§ß‡•Ä", "‡§ï‡•Å‡§π‡§ø‡§∞‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the term for a long period without rain?",
      ne: "‡§≤‡§æ‡§Æ‡•ã ‡§∏‡§Æ‡§Ø‡§∏‡§Æ‡•ç‡§Æ ‡§µ‡§∞‡•ç‡§∑‡§æ ‡§®‡§π‡•Å‡§®‡•á ‡§Ö‡§µ‡§∏‡•ç‡§•‡§æ‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Flood", "Drought", "Hurricane", "Blizzard"],
      ne: ["‡§¨‡§æ‡§¢‡•Ä", "‡§ñ‡§°‡•á‡§∞‡•Ä", "‡§π‡§∞‡§ø‡§ï‡•á‡§®", "‡§π‡§ø‡§Æ‡§Ü‡§Å‡§ß‡•Ä"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What gas makes up most of Earth's atmosphere?",
      ne: "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§µ‡§æ‡§Ø‡•Å‡§Æ‡§£‡•ç‡§°‡§≤‡§ï‡•ã ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§ß‡•á‡§∞‡•à ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§ï‡•Å‡§® ‡§ó‡•ç‡§Ø‡§æ‡§∏‡§≤‡•á ‡§¨‡§®‡§æ‡§â‡§Å‡§õ?",
    },
    options: {
      en: ["Oxygen", "Carbon Dioxide", "Nitrogen", "Helium"],
      ne: ["‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®", "‡§ï‡§æ‡§∞‡•ç‡§¨‡§® ‡§°‡§æ‡§á‡§Ö‡§ï‡•ç‡§∏‡§æ‡§á‡§°", "‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§®", "‡§π‡§ø‡§≤‡§ø‡§Ø‡§Æ"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is a sudden burst of wind called?",
      ne: "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§Ö‡§ö‡§æ‡§®‡§ï ‡§ù‡•ã‡§ï‡•ç‡§ï‡§æ‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Gust", "Breeze", "Gale", "Draft"],
      ne: ["‡§ù‡•ã‡§ï‡•ç‡§ï‡§æ", "‡§π‡§≤‡•ç‡§ï‡§æ ‡§π‡§æ‡§µ‡§æ", "‡§Ü‡§Å‡§ß‡•Ä", "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§¨‡§π‡§æ‡§µ"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What do clouds need to form?",
      ne: "‡§¨‡§æ‡§¶‡§≤ ‡§¨‡§®‡§æ‡§â‡§® ‡§ï‡•á ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§õ?",
    },
    options: {
      en: ["Wind", "Water vapor", "Sand", "Smoke"],
      ne: ["‡§π‡§æ‡§µ‡§æ", "‡§™‡§æ‡§®‡•Ä‡§ï‡•ã ‡§µ‡§æ‡§´", "‡§¨‡§æ‡§≤‡•Å‡§µ‡§æ", "‡§ß‡•Å‡§µ‡§æ‡§Å"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the calm center of a hurricane called?",
      ne: "‡§π‡§∞‡§ø‡§ï‡•á‡§®‡§ï‡•ã ‡§∂‡§æ‡§®‡•ç‡§§ ‡§ï‡•á‡§®‡•ç‡§¶‡•ç‡§∞‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Eye", "Wall", "Tail", "Core"],
      ne: ["‡§Ü‡§Å‡§ñ‡§æ", "‡§™‡§∞‡•ç‡§ñ‡§æ‡§≤", "‡§™‡•Å‡§ö‡•ç‡§õ‡§∞", "‡§ï‡•á‡§®‡•ç‡§¶‡•ç‡§∞"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What season is typically the warmest?",
      ne: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø‡§§‡§Ø‡§æ ‡§ï‡•Å‡§® ‡§Æ‡•å‡§∏‡§Æ ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§§‡§æ‡§§‡•ã ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Winter", "Spring", "Summer", "Fall"],
      ne: ["‡§π‡§ø‡§â‡§Å‡§¶", "‡§µ‡§∏‡§®‡•ç‡§§", "‡§ó‡§∞‡•ç‡§Æ‡•Ä", "‡§∂‡§∞‡§¶"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is sleet?",
      ne: "‡§π‡§ø‡§â‡§Å‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§µ‡§∞‡•ç‡§∑‡§æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Snow", "Rain mixed with ice", "Hail", "Fog"],
      ne: ["‡§π‡§ø‡§â‡§Å", "‡§¨‡§∞‡§´‡§∏‡§π‡§ø‡§§‡§ï‡•ã ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§Ö‡§∏‡§ø‡§®‡§æ", "‡§ï‡•Å‡§π‡§ø‡§∞‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What do we call a scientist who studies weather?",
      ne: "‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•á ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Biologist", "Geologist", "Meteorologist", "Chemist"],
      ne: ["‡§ú‡•Ä‡§µ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§≠‡•Ç‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§Æ‡•å‡§∏‡§Æ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§∞‡§∏‡§æ‡§Ø‡§®‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What causes thunder?",
      ne: "‡§ó‡§∞‡•ç‡§ú‡§®‡§ï‡•ã ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Wind", "Lightning", "Rain", "Clouds"],
      ne: ["‡§π‡§æ‡§µ‡§æ", "‡§ö‡§ü‡•ç‡§Ø‡§æ‡§ô", "‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§¨‡§æ‡§¶‡§≤"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the term for very low temperatures?",
      ne: "‡§ß‡•á‡§∞‡•à ‡§ï‡§Æ ‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§ï‡•Å‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Heatwave", "Cold snap", "Drought", "Flood"],
      ne: ["‡§§‡§æ‡§§‡•ã ‡§≤‡§π‡§∞", "‡§ö‡§ø‡§∏‡•ã ‡§Ö‡§µ‡§∏‡•ç‡§•‡§æ", "‡§ñ‡§°‡•á‡§∞‡•Ä", "‡§¨‡§æ‡§¢‡•Ä"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a common sign of an approaching storm?",
      ne: "‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä ‡§Ü‡§â‡§Å‡§¶‡•à ‡§ó‡§∞‡•á‡§ï‡•ã ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Clear skies", "Dark clouds", "Bright sun", "Calm winds"],
      ne: ["‡§ñ‡•Å‡§≤‡§æ ‡§Ü‡§ï‡§æ‡§∂", "‡§ï‡§æ‡§≤‡§æ ‡§¨‡§æ‡§¶‡§≤", "‡§ö‡§Æ‡•ç‡§ï‡§ø‡§≤‡•ã ‡§ò‡§æ‡§Æ", "‡§∂‡§æ‡§®‡•ç‡§§ ‡§π‡§æ‡§µ‡§æ"],
    },
    correct: 1,
  },
];

const mediumQuestions: Question[] = [
  {
    question: {
      en: "üå°Ô∏è Which layer of the atmosphere contains the ozone layer?",
      ne: "üå°Ô∏è ‡§µ‡§æ‡§Ø‡•Å‡§Æ‡§£‡•ç‡§°‡§≤‡§ï‡•ã ‡§ï‡•Å‡§® ‡§§‡§π‡§Æ‡§æ ‡§ì‡§ú‡•ã‡§® ‡§§‡§π ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Troposphere", "Stratosphere", "Mesosphere", "Exosphere"],
      ne: ["‡§ü‡•ç‡§∞‡•ã‡§™‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§∏‡•ç‡§ü‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§Æ‡•á‡§∏‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§è‡§ï‡•ç‡§∏‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "üí® What causes wind?",
      ne: "üí® ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Movement of clouds",
        "Temperature differences",
        "Rotation of Earth only",
        "Ocean waves",
      ],
      ne: [
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§ö‡§æ‡§≤",
        "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ‡§ï‡•ã ‡§≠‡§ø‡§®‡•ç‡§®‡§§‡§æ",
        "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ò‡•Å‡§Æ‡§æ‡§á ‡§Æ‡§æ‡§§‡•ç‡§∞",
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§õ‡§æ‡§≤‡§π‡§∞‡•Ç",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What do you call someone who forecasts weather?",
      ne: "‡§Æ‡•å‡§∏‡§Æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§® ‡§ó‡§∞‡•ç‡§®‡•á ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Astronomer", "Geologist", "Meteorologist", "Biologist"],
      ne: ["‡§ñ‡§ó‡•ã‡§≤‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§≠‡•Ç‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§Æ‡•å‡§∏‡§Æ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï", "‡§ú‡•Ä‡§µ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What two things are needed for a rainbow?",
      ne: "‡§á‡§®‡•ç‡§¶‡•ç‡§∞‡•á‡§£‡•Ä‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§ï‡•Å‡§® ‡§¶‡•Å‡§à ‡§ö‡•Ä‡§ú‡§π‡§∞‡•Ç ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§õ‡§®‡•ç?",
    },
    options: {
      en: ["Sun and rain", "Moon and clouds", "Wind and sun", "Rain and wind"],
      ne: ["‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§∞ ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ ‡§∞ ‡§¨‡§æ‡§¶‡§≤", "‡§π‡§æ‡§µ‡§æ ‡§∞ ‡§∏‡•Ç‡§∞‡•ç‡§Ø", "‡§µ‡§∞‡•ç‡§∑‡§æ ‡§∞ ‡§π‡§æ‡§µ‡§æ"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is the average weather pattern called?",
      ne: "‡§î‡§∏‡§§ ‡§Æ‡•å‡§∏‡§Æ ‡§¢‡§æ‡§Å‡§ö‡§æ‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Weather", "Climate", "Season", "Forecast"],
      ne: ["‡§Æ‡•å‡§∏‡§Æ", "‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å", "‡§Æ‡•å‡§∏‡§Æ (‡§ã‡§§‡•Å)", "‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§®"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a rotating funnel cloud with high winds?",
      ne: "‡§â‡§ö‡•ç‡§ö ‡§π‡§æ‡§µ‡§æ‡§∏‡§π‡§ø‡§§‡§ï‡•ã ‡§ò‡•Å‡§Æ‡•ç‡§®‡•á ‡§´‡§®‡•á‡§≤ ‡§¨‡§æ‡§¶‡§≤‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Hurricane", "Tornado", "Cyclone", "Typhoon"],
      ne: ["‡§π‡§∞‡§ø‡§ï‡•á‡§®", "‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã", "‡§ö‡§ï‡•ç‡§∞‡§µ‡§æ‡§§", "‡§ü‡§æ‡§á‡§´‡•Å‡§®"],
    },
    correct: 1,
  },
  {
    question: {
      en: "Highest temperature recorded (134¬∞F) in which country?",
      ne: "‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§â‡§ö‡•ç‡§ö ‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ (‡•ß‡•©‡•™¬∞F) ‡§ï‡•Å‡§® ‡§¶‡•á‡§∂‡§Æ‡§æ ‡§∞‡•á‡§ï‡§∞‡•ç‡§° ‡§ó‡§∞‡§ø‡§è‡§ï‡•ã ‡§õ?",
    },
    options: {
      en: ["Saudi Arabia", "USA", "Australia", "India"],
      ne: ["‡§∏‡§æ‡§â‡§¶‡•Ä ‡§Ö‡§∞‡•á‡§¨‡§ø‡§Ø‡§æ", "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ", "‡§Ö‡§∑‡•ç‡§ü‡•ç‡§∞‡•á‡§≤‡§ø‡§Ø‡§æ", "‡§≠‡§æ‡§∞‡§§"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What makes hurricanes powerful?",
      ne: "‡§π‡§∞‡§ø‡§ï‡•á‡§®‡§≤‡§æ‡§à ‡§∂‡§ï‡•ç‡§§‡§ø‡§∂‡§æ‡§≤‡•Ä ‡§¨‡§®‡§æ‡§â‡§®‡•á ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Warm ocean water", "Cold air", "Mountains", "Deserts"],
      ne: ["‡§§‡§æ‡§§‡•ã ‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§™‡§æ‡§®‡•Ä", "‡§ö‡§ø‡§∏‡•ã ‡§π‡§æ‡§µ‡§æ", "‡§™‡§π‡§æ‡§°‡§π‡§∞‡•Ç", "‡§Æ‡§∞‡•Å‡§≠‡•Ç‡§Æ‡§ø"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is snow?",
      ne: "‡§π‡§ø‡§â‡§Å ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Frozen rain", "Ice crystals", "Hail", "Sleet"],
      ne: ["‡§ú‡§Æ‡•á‡§ï‡•ã ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§¨‡§∞‡§´‡§ï‡§æ ‡§ï‡•ç‡§∞‡§ø‡§∏‡•ç‡§ü‡§≤", "‡§Ö‡§∏‡§ø‡§®‡§æ", "‡§π‡§ø‡§â‡§Å‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§µ‡§∞‡•ç‡§∑‡§æ"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What are clouds made of?",
      ne: "‡§¨‡§æ‡§¶‡§≤‡§π‡§∞‡•Ç ‡§ï‡•á‡§≤‡•á ‡§¨‡§®‡•á‡§ï‡§æ ‡§π‡•Å‡§®‡•ç‡§õ‡§®‡•ç?",
    },
    options: {
      en: ["Cotton", "Water droplets", "Smoke", "Air only"],
      ne: ["‡§ï‡§™‡§æ‡§∏", "‡§™‡§æ‡§®‡•Ä‡§ï‡§æ ‡§•‡•ã‡§™‡§æ‡§π‡§∞‡•Ç", "‡§ß‡•Å‡§µ‡§æ‡§Å", "‡§π‡§æ‡§µ‡§æ ‡§Æ‡§æ‡§§‡•ç‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a drought?",
      ne: "‡§ñ‡§°‡•á‡§∞‡•Ä ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Too much rain", "Lack of water", "Strong wind", "Cold weather"],
      ne: ["‡§ß‡•á‡§∞‡•à ‡§µ‡§∞‡•ç‡§∑‡§æ", "‡§™‡§æ‡§®‡•Ä‡§ï‡•ã ‡§ï‡§Æ‡•Ä", "‡§ï‡§°‡§æ ‡§π‡§æ‡§µ‡§æ", "‡§ö‡§ø‡§∏‡•ã ‡§Æ‡•å‡§∏‡§Æ"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What causes seasons?",
      ne: "‡§Æ‡•å‡§∏‡§Æ‡§π‡§∞‡•Ç (‡§ã‡§§‡•Å‡§π‡§∞‡•Ç) ‡§ï‡•ã ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Earth's tilt", "Distance from sun", "Moon", "Wind"],
      ne: ["‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ù‡•Å‡§ï‡§æ‡§µ", "‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§¨‡§æ‡§ü ‡§¶‡•Ç‡§∞‡•Ä", "‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ", "‡§π‡§æ‡§µ‡§æ"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is the primary source of Earth's climate system?",
      ne: "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∏‡•ç‡§∞‡•ã‡§§ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Moon", "Sun", "Stars", "Earth's core"],
      ne: ["‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ", "‡§∏‡•Ç‡§∞‡•ç‡§Ø", "‡§§‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç", "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ï‡•á‡§®‡•ç‡§¶‡•ç‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What measures atmospheric pressure?",
      ne: "‡§µ‡§æ‡§Ø‡•Å‡§Æ‡§£‡•ç‡§°‡§≤‡•Ä‡§Ø ‡§ö‡§æ‡§™ ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§®‡•á ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Thermometer", "Barometer", "Anemometer", "Hygrometer"],
      ne: ["‡§•‡§∞‡•ç‡§Æ‡§Æ‡§ø‡§ü‡§∞", "‡§¨‡•ç‡§Ø‡§æ‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§è‡§®‡•á‡§Æ‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§π‡§æ‡§á‡§ó‡•ç‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a cold front?",
      ne: "‡§ö‡§ø‡§∏‡•ã ‡§Æ‡•ã‡§∞‡•ç‡§ö‡§æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Warm air replacing cold air",
        "Cold air replacing warm air",
        "Stable air mass",
        "High-pressure system",
      ],
      ne: [
        "‡§§‡§æ‡§§‡•ã ‡§π‡§æ‡§µ‡§æ‡§≤‡•á ‡§ö‡§ø‡§∏‡•ã ‡§π‡§æ‡§µ‡§æ‡§≤‡§æ‡§à ‡§µ‡§ø‡§∏‡•ç‡§•‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§®‡•á",
        "‡§ö‡§ø‡§∏‡•ã ‡§π‡§æ‡§µ‡§æ‡§≤‡•á ‡§§‡§æ‡§§‡•ã ‡§π‡§æ‡§µ‡§æ‡§≤‡§æ‡§à ‡§µ‡§ø‡§∏‡•ç‡§•‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§®‡•á",
        "‡§∏‡•ç‡§•‡§ø‡§∞ ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§∏‡§Æ‡•Ç‡§π",
        "‡§â‡§ö‡•ç‡§ö-‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What type of cloud is thin and wispy?",
      ne: "‡§ï‡•Å‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞‡§ï‡•ã ‡§¨‡§æ‡§¶‡§≤ ‡§™‡§æ‡§§‡§≤‡•ã ‡§∞ ‡§π‡§≤‡•ç‡§ï‡§æ ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Cumulus", "Stratus", "Cirrus", "Nimbus"],
      ne: ["‡§ï‡•ç‡§Ø‡•Å‡§Æ‡•Å‡§≤‡§∏", "‡§∏‡•ç‡§ü‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡§∏", "‡§∏‡§ø‡§∞‡§∏", "‡§®‡§ø‡§Æ‡•ç‡§¨‡§∏"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is the term for a sudden flood caused by heavy rain?",
      ne: "‡§≠‡§æ‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§∑‡§æ‡§≤‡•á ‡§π‡•Å‡§®‡•á ‡§Ö‡§ö‡§æ‡§®‡§ï ‡§¨‡§æ‡§¢‡•Ä‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Tsunami", "Flash flood", "Hurricane", "Tornado"],
      ne: ["‡§∏‡•Å‡§®‡§æ‡§Æ‡•Ä", "‡§Ü‡§ï‡§∏‡•ç‡§Æ‡§ø‡§ï ‡§¨‡§æ‡§¢‡•Ä", "‡§π‡§∞‡§ø‡§ï‡•á‡§®", "‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the jet stream?",
      ne: "‡§ú‡•á‡§ü ‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§Æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Ocean current",
        "High-altitude wind",
        "Low-pressure system",
        "Rain pattern",
      ],
      ne: [
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§ß‡§æ‡§∞‡§æ",
        "‡§â‡§ö‡•ç‡§ö ‡§â‡§ö‡§æ‡§á‡§ï‡•ã ‡§π‡§æ‡§µ‡§æ",
        "‡§®‡§ø‡§Æ‡•ç‡§®-‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
        "‡§µ‡§∞‡•ç‡§∑‡§æ‡§ï‡•ã ‡§¢‡§æ‡§Å‡§ö‡§æ",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is El Ni√±o?",
      ne: "‡§è‡§≤ ‡§®‡§ø‡§®‡•ã ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A cooling of ocean waters",
        "A warming of ocean waters",
        "A type of tornado",
        "A high-pressure system",
      ],
      ne: [
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§™‡§æ‡§®‡•Ä‡§ï‡•ã ‡§ö‡§ø‡§∏‡•ã",
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§™‡§æ‡§®‡•Ä‡§ï‡•ã ‡§§‡§æ‡§§‡•ã",
        "‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
        "‡§â‡§ö‡•ç‡§ö-‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What does a hygrometer measure?",
      ne: "‡§π‡§æ‡§á‡§ó‡•ç‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞‡§≤‡•á ‡§ï‡•á ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§õ?",
    },
    options: {
      en: ["Wind speed", "Humidity", "Pressure", "Temperature"],
      ne: ["‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø", "‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§§‡§æ", "‡§ö‡§æ‡§™", "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a monsoon?",
      ne: "‡§Æ‡§æ‡§®‡§∏‡•Ç‡§® ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A dry season",
        "A seasonal wind with heavy rain",
        "A cold front",
        "A type of cloud",
      ],
      ne: [
        "‡§∏‡•Å‡§ñ‡•ç‡§ñ‡§æ ‡§Æ‡•å‡§∏‡§Æ",
        "‡§≠‡§æ‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§∑‡§æ‡§∏‡§π‡§ø‡§§‡§ï‡•ã ‡§Æ‡•å‡§∏‡§Æ‡•Ä ‡§π‡§æ‡§µ‡§æ",
        "‡§ö‡§ø‡§∏‡•ã ‡§Æ‡•ã‡§∞‡•ç‡§ö‡§æ",
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the greenhouse effect?",
      ne: "‡§π‡§∞‡§ø‡§§‡§ó‡•É‡§π ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Cooling of the Earth",
        "Trapping of heat by gases",
        "Wind circulation",
        "Ocean currents",
      ],
      ne: [
        "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ö‡§ø‡§∏‡•ã",
        "‡§ó‡•ç‡§Ø‡§æ‡§∏‡§π‡§∞‡•Ç‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§§‡§æ‡§™‡§ï‡•ã ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π",
        "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§™‡§∞‡§ø‡§∏‡§Ç‡§ö‡§∞‡§£",
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§ß‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a waterspout?",
      ne: "‡§µ‡§æ‡§ü‡§∞‡§∏‡•ç‡§™‡§æ‡§â‡§ü ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A type of rain",
        "A tornado over water",
        "A wave",
        "A cloud formation",
      ],
      ne: [
        "‡§µ‡§∞‡•ç‡§∑‡§æ‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
        "‡§™‡§æ‡§®‡•Ä‡§Æ‡§æ‡§•‡§ø‡§ï‡•ã ‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã",
        "‡§õ‡§æ‡§≤",
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§ó‡§†‡§®",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the main cause of fog?",
      ne: "‡§ï‡•Å‡§π‡§ø‡§∞‡•ã‡§ï‡•ã ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "High wind speeds",
        "Cooling of air near the ground",
        "Heavy rain",
        "Warm ocean currents",
      ],
      ne: [
        "‡§â‡§ö‡•ç‡§ö ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø",
        "‡§ú‡§Æ‡§ø‡§® ‡§®‡§ú‡§ø‡§ï‡§ï‡•ã ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ö‡§ø‡§∏‡•ã",
        "‡§≠‡§æ‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§∑‡§æ",
        "‡§§‡§æ‡§§‡•ã ‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§ß‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the term for a high-pressure system?",
      ne: "‡§â‡§ö‡•ç‡§ö-‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§ï‡•Å‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Cyclone", "Anticyclone", "Tornado", "Monsoon"],
      ne: ["‡§ö‡§ï‡•ç‡§∞‡§µ‡§æ‡§§", "‡§è‡§®‡•ç‡§ü‡§ø‡§∏‡§æ‡§á‡§ï‡•ç‡§≤‡•ã‡§®", "‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã", "‡§Æ‡§æ‡§®‡§∏‡•Ç‡§®"],
    },
    correct: 1,
  },
];

const hardQuestions: Question[] = [
  {
    question: {
      en: "üåç The Intertropical Convergence Zone (ITCZ) is also known as?",
      ne: "üåç ‡§á‡§®‡•ç‡§ü‡§∞‡§ü‡•ç‡§∞‡§™‡§ø‡§ï‡§≤ ‡§ï‡§®‡•ç‡§≠‡§∞‡•ç‡§ú‡•á‡§®‡•ç‡§∏ ‡§ú‡•ã‡§® (ITCZ) ‡§≤‡§æ‡§à ‡§Ö‡§∞‡•ç‡§ï‡•ã ‡§ï‡•á ‡§®‡§æ‡§Æ‡§≤‡•á ‡§ö‡§ø‡§®‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Horse Latitudes", "Doldrums", "Trade Winds", "Polar Vortex"],
      ne: ["‡§π‡§∞‡•ç‡§∏ ‡§≤‡•ç‡§Ø‡§æ‡§ü‡§ø‡§ü‡•ç‡§Ø‡•Ç‡§°‡•ç‡§∏", "‡§°‡•ã‡§≤‡•ç‡§°‡•ç‡§∞‡§Æ‡•ç‡§∏", "‡§ü‡•ç‡§∞‡•á‡§° ‡§µ‡§ø‡§£‡•ç‡§°‡•ç‡§∏", "‡§™‡•ã‡§≤‡§∞ ‡§≠‡•ã‡§∞‡•ç‡§ü‡•á‡§ï‡•ç‡§∏"],
    },
    correct: 1,
  },
  {
    question: {
      en: "‚ö° What is the scientific term for sudden downdrafts during thunderstorms?",
      ne: "‚ö° ‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä‡§Æ‡§æ ‡§Ö‡§ö‡§æ‡§®‡§ï ‡§§‡§≤ ‡§ù‡§∞‡•ç‡§®‡•á ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Cyclone", "Microburst", "Squall", "Derecho"],
      ne: ["‡§ö‡§ï‡•ç‡§∞‡§µ‡§æ‡§§", "‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§¨‡§∞‡•ç‡§∏‡•ç‡§ü", "‡§∏‡•ç‡§ï‡•ç‡§µ‡§≤", "‡§°‡•á‡§∞‡•á‡§ö‡•ã"],
    },
    correct: 1,
  },
  {
    question: {
      en: "From which cloud do thunderstorms come?",
      ne: "‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä ‡§ï‡•Å‡§® ‡§¨‡§æ‡§¶‡§≤‡§¨‡§æ‡§ü ‡§Ü‡§â‡§Å‡§õ?",
    },
    options: {
      en: ["Cumulus", "Cumulonimbus", "Stratus", "Cirrus"],
      ne: ["‡§ï‡•ç‡§Ø‡•Å‡§Æ‡•Å‡§≤‡§∏", "‡§ï‡•ç‡§Ø‡•Å‡§Æ‡•Å‡§≤‡•ã‡§®‡§ø‡§Æ‡•ç‡§¨‡§∏", "‡§∏‡•ç‡§ü‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡§∏", "‡§∏‡§ø‡§∞‡§∏"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What does CAPE stand for in meteorology?",
      ne: "‡§Æ‡•å‡§∏‡§Æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®‡§Æ‡§æ CAPE ‡§ï‡•ã ‡§Ö‡§∞‡•ç‡§• ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Convective Available Potential Energy",
        "Cloud Altitude Pressure Estimate",
        "Cumulative Atmospheric Pressure Effect",
        "Convective Air Parcel Energy",
      ],
      ne: [
        "‡§ï‡§®‡•ç‡§≠‡•á‡§ï‡•ç‡§ü‡§ø‡§≠ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§∏‡§Æ‡•ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§ä‡§∞‡•ç‡§ú‡§æ",
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§â‡§ö‡§æ‡§á ‡§ö‡§æ‡§™ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§®",
        "‡§∏‡§Ç‡§ö‡§Ø‡•Ä ‡§µ‡§æ‡§Ø‡•Å‡§Æ‡§£‡•ç‡§°‡§≤‡•Ä‡§Ø ‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ",
        "‡§ï‡§®‡•ç‡§≠‡•á‡§ï‡•ç‡§ü‡§ø‡§≠ ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§™‡§æ‡§∞‡•ç‡§∏‡§≤ ‡§ä‡§∞‡•ç‡§ú‡§æ",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "Standard temperature at sea level?",
      ne: "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§∏‡§§‡§π‡§Æ‡§æ ‡§Æ‡§æ‡§®‡§ï ‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["0¬∞C", "15¬∞C", "20¬∞C", "25¬∞C"],
      ne: ["‡•¶ ‡§°‡§ø‡§ó‡•ç‡§∞‡•Ä ‡§∏‡•á‡§≤‡•ç‡§∏‡§ø‡§Ø‡§∏", "‡•ß‡•´ ‡§°‡§ø‡§ó‡•ç‡§∞‡•Ä ‡§∏‡•á‡§≤‡•ç‡§∏‡§ø‡§Ø‡§∏", "‡•®‡•¶ ‡§°‡§ø‡§ó‡•ç‡§∞‡•Ä ‡§∏‡•á‡§≤‡•ç‡§∏‡§ø‡§Ø‡§∏", "‡•®‡•´ ‡§°‡§ø‡§ó‡•ç‡§∞‡•Ä ‡§∏‡•á‡§≤‡•ç‡§∏‡§ø‡§Ø‡§∏"],
    },
    correct: 1,
  },
  {
    question: {
      en: "Standard pressure at sea level?",
      ne: "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§∏‡§§‡§π‡§Æ‡§æ ‡§Æ‡§æ‡§®‡§ï ‡§ö‡§æ‡§™ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["1000 mb", "1013 mb", "1020 mb", "990 mb"],
      ne: ["‡•ß‡•¶‡•¶‡•¶ ‡§Æ‡§ø‡§≤‡§ø‡§¨‡§æ‡§∞", "‡•ß‡•¶‡•ß‡•© ‡§Æ‡§ø‡§≤‡§ø‡§¨‡§æ‡§∞", "‡•ß‡•¶‡•®‡•¶ ‡§Æ‡§ø‡§≤‡§ø‡§¨‡§æ‡§∞", "‡•Ø‡•Ø‡•¶ ‡§Æ‡§ø‡§≤‡§ø‡§¨‡§æ‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "In a stable air mass, what is likely?",
      ne: "‡§∏‡•ç‡§•‡§ø‡§∞ ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§∏‡§Æ‡•Ç‡§π‡§Æ‡§æ ‡§ï‡•á ‡§∏‡§Æ‡•ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Turbulence", "Smooth air", "Thunderstorms", "High winds"],
      ne: ["‡§Ö‡§∏‡•ç‡§•‡§ø‡§∞‡§§‡§æ", "‡§∏‡§π‡§ú ‡§π‡§æ‡§µ‡§æ", "‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä", "‡§â‡§ö‡•ç‡§ö ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø"],
    },
    correct: 1,
  },
  {
    question: {
      en: "Weather mostly occurs in which layer?",
      ne: "‡§Æ‡•å‡§∏‡§Æ ‡§™‡•ç‡§∞‡§æ‡§Ø‡§É ‡§ï‡•Å‡§® ‡§§‡§π‡§Æ‡§æ ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Stratosphere", "Troposphere", "Mesosphere", "Thermosphere"],
      ne: ["‡§∏‡•ç‡§ü‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§ü‡•ç‡§∞‡•ã‡§™‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§Æ‡•á‡§∏‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞", "‡§•‡§∞‡•ç‡§Æ‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "Three main gases in the atmosphere?",
      ne: "‡§µ‡§æ‡§Ø‡•Å‡§Æ‡§£‡•ç‡§°‡§≤‡§ï‡§æ ‡§§‡•Ä‡§® ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ó‡•ç‡§Ø‡§æ‡§∏‡§π‡§∞‡•Ç ‡§ï‡•á ‡§π‡•Å‡§®‡•ç?",
    },
    options: {
      en: [
        "Nitrogen, Oxygen, Carbon Dioxide",
        "Nitrogen, Oxygen, Argon",
        "Oxygen, Carbon Dioxide, Neon",
        "Helium, Nitrogen, Oxygen",
      ],
      ne: [
        "‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§®, ‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®, ‡§ï‡§æ‡§∞‡•ç‡§¨‡§® ‡§°‡§æ‡§á‡§Ö‡§ï‡•ç‡§∏‡§æ‡§á‡§°",
        "‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§®, ‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®, ‡§Ü‡§∞‡•ç‡§ó‡§®",
        "‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®, ‡§ï‡§æ‡§∞‡•ç‡§¨‡§® ‡§°‡§æ‡§á‡§Ö‡§ï‡•ç‡§∏‡§æ‡§á‡§°, ‡§®‡§ø‡§Ø‡§®",
        "‡§π‡§ø‡§≤‡§ø‡§Ø‡§Æ, ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§®, ‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What measures wind speed?",
      ne: "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡•ç‡§®‡•á ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Barometer", "Anemometer", "Thermometer", "Hygrometer"],
      ne: ["‡§¨‡•ç‡§Ø‡§æ‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§è‡§®‡•á‡§Æ‡•ã‡§Æ‡§ø‡§ü‡§∞", "‡§•‡§∞‡•ç‡§Æ‡§Æ‡§ø‡§ü‡§∞", "‡§π‡§æ‡§á‡§ó‡•ç‡§∞‡•ã‡§Æ‡§ø‡§ü‡§∞"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the term for winds greater than 32 mph with heavy snow?",
      ne: "‡•©‡•® ‡§Æ‡§æ‡§á‡§≤ ‡§™‡•ç‡§∞‡§§‡§ø ‡§ò‡§£‡•ç‡§ü‡§æ‡§≠‡§®‡•ç‡§¶‡§æ ‡§¨‡§¢‡•Ä ‡§π‡§æ‡§µ‡§æ‡§∏‡§π‡§ø‡§§‡§ï‡•ã ‡§≠‡§æ‡§∞‡•Ä ‡§π‡§ø‡§Æ‡§™‡§æ‡§§‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§ï‡•Å‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Blizzard", "Snowstorm", "Hurricane", "Tornado"],
      ne: ["‡§π‡§ø‡§Æ‡§Ü‡§Å‡§ß‡•Ä", "‡§π‡§ø‡§Æ‡§™‡§æ‡§§", "‡§π‡§∞‡§ø‡§ï‡•á‡§®", "‡§ü‡•ã‡§∞‡•ç‡§®‡§æ‡§°‡•ã"],
    },
    correct: 0,
  },
  {
    question: {
      en: "How is water vapor in the air measured?",
      ne: "‡§π‡§æ‡§µ‡§æ‡§Æ‡§æ ‡§™‡§æ‡§®‡•Ä‡§ï‡•ã ‡§µ‡§æ‡§´ ‡§ï‡§∏‡§∞‡•Ä ‡§Æ‡§æ‡§™‡§® ‡§ó‡§∞‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Temperature", "Humidity", "Pressure", "Density"],
      ne: ["‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ", "‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§§‡§æ", "‡§ö‡§æ‡§™", "‡§ò‡§®‡§§‡•ç‡§µ"],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the Coriolis effect caused by?",
      ne: "‡§ï‡•ã‡§∞‡§ø‡§ì‡§≤‡§ø‡§∏ ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ‡§ï‡•ã ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Earth's rotation",
        "Temperature differences",
        "Ocean currents",
        "Solar radiation",
      ],
      ne: [
        "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ò‡•Å‡§Æ‡§æ‡§á",
        "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ‡§ï‡•ã ‡§≠‡§ø‡§®‡•ç‡§®‡§§‡§æ",
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§ß‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç",
        "‡§∏‡•å‡§∞‡•ç‡§Ø ‡§µ‡§ø‡§ï‡§ø‡§∞‡§£",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is a derecho?",
      ne: "‡§°‡•á‡§∞‡•á‡§ö‡•ã ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A tropical storm",
        "A widespread windstorm",
        "A type of cloud",
        "A cold front",
      ],
      ne: [
        "‡§â‡§∑‡•ç‡§£‡§ï‡§ü‡§ø‡§¨‡§Ç‡§ß‡•Ä‡§Ø ‡§Ü‡§Å‡§ß‡•Ä",
        "‡§µ‡§ø‡§∂‡§æ‡§≤ ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§Ü‡§Å‡§ß‡•Ä",
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
        "‡§ö‡§ø‡§∏‡•ã ‡§Æ‡•ã‡§∞‡•ç‡§ö‡§æ",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the primary driver of ocean currents?",
      ne: "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§ß‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§ö‡§æ‡§≤‡§ï ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Wind", "Tides", "Earth's rotation", "Solar heat"],
      ne: ["‡§π‡§æ‡§µ‡§æ", "‡§ú‡•ç‡§µ‡§æ‡§∞‡§≠‡§æ‡§ü‡§æ", "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ò‡•Å‡§Æ‡§æ‡§á", "‡§∏‡•å‡§∞‡•ç‡§Ø ‡§§‡§æ‡§™"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is a haboob?",
      ne: "‡§π‡§¨‡•Ç‡§¨ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A dust storm",
        "A tropical cyclone",
        "A cold front",
        "A high-pressure system",
      ],
      ne: [
        "‡§ß‡•Ç‡§≤‡§ï‡•ã ‡§Ü‡§Å‡§ß‡•Ä",
        "‡§â‡§∑‡•ç‡§£‡§ï‡§ü‡§ø‡§¨‡§Ç‡§ß‡•Ä‡§Ø ‡§ö‡§ï‡•ç‡§∞‡§µ‡§æ‡§§",
        "‡§ö‡§ø‡§∏‡•ã ‡§Æ‡•ã‡§∞‡•ç‡§ö‡§æ",
        "‡§â‡§ö‡•ç‡§ö-‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is the approximate height of the troposphere at the equator?",
      ne: "‡§µ‡§ø‡§∑‡•Å‡§µ‡§§ ‡§∞‡•á‡§ñ‡§æ‡§Æ‡§æ ‡§ü‡•ç‡§∞‡•ã‡§™‡•ã‡§∏‡•ç‡§´‡§ø‡§Ø‡§∞‡§ï‡•ã ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§®‡§ø‡§§ ‡§â‡§ö‡§æ‡§á ‡§ï‡§§‡§ø ‡§π‡•ã?",
    },
    options: {
      en: ["5 km", "10 km", "16 km", "20 km"],
      ne: ["‡•´ ‡§ï‡§ø‡§Æ‡•Ä", "‡•ß‡•¶ ‡§ï‡§ø‡§Æ‡•Ä", "‡•ß‡•¨ ‡§ï‡§ø‡§Æ‡•Ä", "‡•®‡•¶ ‡§ï‡§ø‡§Æ‡•Ä"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is a squall line?",
      ne: "‡§∏‡•ç‡§ï‡•ç‡§µ‡§≤ ‡§≤‡§æ‡§á‡§® ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A line of thunderstorms",
        "A type of cloud",
        "A wind pattern",
        "A pressure system",
      ],
      ne: [
        "‡§Ü‡§Å‡§ß‡•Ä‡§¨‡•á‡§π‡§∞‡•Ä‡§ï‡•ã ‡§∞‡•á‡§ñ‡§æ",
        "‡§¨‡§æ‡§¶‡§≤‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
        "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§¢‡§æ‡§Å‡§ö‡§æ",
        "‡§ö‡§æ‡§™ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "What gas is most responsible for the greenhouse effect?",
      ne: "‡§π‡§∞‡§ø‡§§‡§ó‡•É‡§π ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§ú‡§ø‡§Æ‡•ç‡§Æ‡•á‡§µ‡§æ‡§∞ ‡§ó‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡•Å‡§® ‡§π‡•ã?",
    },
    options: {
      en: ["Oxygen", "Nitrogen", "Carbon Dioxide", "Argon"],
      ne: ["‡§Ö‡§ï‡•ç‡§∏‡§ø‡§ú‡§®", "‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§®", "‡§ï‡§æ‡§∞‡•ç‡§¨‡§® ‡§°‡§æ‡§á‡§Ö‡§ï‡•ç‡§∏‡§æ‡§á‡§°", "‡§Ü‡§∞‡•ç‡§ó‡§®"],
    },
    correct: 2,
  },
  {
    question: {
      en: "What is the term for a rapid drop in temperature?",
      ne: "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ‡§Æ‡§æ ‡§§‡•Ä‡§µ‡•ç‡§∞ ‡§ó‡§ø‡§∞‡§æ‡§µ‡§ü‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§ï‡•Å‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§®‡•ç‡§õ?",
    },
    options: {
      en: ["Cold snap", "Heatwave", "Inversion", "Advection"],
      ne: ["‡§ö‡§ø‡§∏‡•ã ‡§Ö‡§µ‡§∏‡•ç‡§•‡§æ", "‡§§‡§æ‡§§‡•ã ‡§≤‡§π‡§∞", "‡§â‡§≤‡•ç‡§ü‡•ã ‡§Ö‡§µ‡§∏‡•ç‡§•‡§æ", "‡§è‡§°‡§≠‡•á‡§ï‡•ç‡§∂‡§®"],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is a foehn wind?",
      ne: "‡§´‡•ã‡§® ‡§π‡§æ‡§µ‡§æ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "A cold polar wind",
        "A warm downslope wind",
        "A tropical storm wind",
        "A high-altitude jet stream",
      ],
      ne: [
        "‡§ö‡§ø‡§∏‡•ã ‡§ß‡•ç‡§∞‡•Å‡§µ‡•Ä‡§Ø ‡§π‡§æ‡§µ‡§æ",
        "‡§§‡§æ‡§§‡•ã ‡§§‡§≤‡§§‡§ø‡§∞ ‡§¨‡§ó‡•ç‡§®‡•á ‡§π‡§æ‡§µ‡§æ",
        "‡§â‡§∑‡•ç‡§£‡§ï‡§ü‡§ø‡§¨‡§Ç‡§ß‡•Ä‡§Ø ‡§Ü‡§Å‡§ß‡•Ä‡§ï‡•ã ‡§π‡§æ‡§µ‡§æ",
        "‡§â‡§ö‡•ç‡§ö ‡§â‡§ö‡§æ‡§á‡§ï‡•ã ‡§ú‡•á‡§ü ‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§Æ",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is the dew point?",
      ne: "‡§∂‡•Ä‡§§ ‡§¨‡§ø‡§®‡•ç‡§¶‡•Å ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Temperature at which air becomes saturated",
        "Lowest daily temperature",
        "Pressure at sea level",
        "Wind speed threshold",
      ],
      ne: [
        "‡§π‡§æ‡§µ‡§æ ‡§∏‡§Ç‡§§‡•É‡§™‡•ç‡§§ ‡§π‡•Å‡§®‡•á ‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ",
        "‡§¶‡•à‡§®‡§ø‡§ï ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§ï‡§Æ ‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ",
        "‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä ‡§∏‡§§‡§π‡§Æ‡§æ ‡§ö‡§æ‡§™",
        "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø ‡§∏‡•Ä‡§Æ‡§æ",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is the Beaufort scale used for?",
      ne: "‡§¨‡•ç‡§Ø‡•Ç‡§´‡•ã‡§∞‡•ç‡§ü ‡§∏‡•ç‡§ï‡•á‡§≤ ‡§ï‡§∏‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ó‡§∞‡§ø‡§®‡•ç‡§õ?",
    },
    options: {
      en: [
        "Measuring temperature",
        "Measuring wind speed",
        "Measuring rainfall",
        "Measuring humidity",
      ],
      ne: [
        "‡§§‡§æ‡§™‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡§æ‡§™‡§®",
        "‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø ‡§Æ‡§æ‡§™‡§®",
        "‡§µ‡§∞‡•ç‡§∑‡§æ ‡§Æ‡§æ‡§™‡§®",
        "‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§§‡§æ ‡§Æ‡§æ‡§™‡§®",
      ],
    },
    correct: 1,
  },
  {
    question: {
      en: "What is a thermal inversion?",
      ne: "‡§•‡§∞‡•ç‡§Æ‡§≤ ‡§á‡§®‡•ç‡§≠‡§∞‡•ç‡§∏‡§® ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: [
        "Warm air below cold air",
        "Cold air below warm air",
        "High wind speeds",
        "Heavy rainfall",
      ],
      ne: [
        "‡§§‡§æ‡§§‡•ã ‡§π‡§æ‡§µ‡§æ ‡§ö‡§ø‡§∏‡•ã ‡§π‡§æ‡§µ‡§æ‡§Æ‡•Å‡§®‡§ø",
        "‡§ö‡§ø‡§∏‡•ã ‡§π‡§æ‡§µ‡§æ ‡§§‡§æ‡§§‡•ã ‡§π‡§æ‡§µ‡§æ‡§Æ‡•Å‡§®‡§ø",
        "‡§â‡§ö‡•ç‡§ö ‡§π‡§æ‡§µ‡§æ‡§ï‡•ã ‡§ó‡§§‡§ø",
        "‡§≠‡§æ‡§∞‡•Ä ‡§µ‡§∞‡•ç‡§∑‡§æ",
      ],
    },
    correct: 0,
  },
  {
    question: {
      en: "What is the primary source of energy for Earth's weather?",
      ne: "‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§Æ‡•å‡§∏‡§Æ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§ä‡§∞‡•ç‡§ú‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§ ‡§ï‡•á ‡§π‡•ã?",
    },
    options: {
      en: ["Earth's core", "Moon", "Sun", "Wind"],
      ne: ["‡§™‡•É‡§•‡•ç‡§µ‡•Ä‡§ï‡•ã ‡§ï‡•á‡§®‡•ç‡§¶‡•ç‡§∞", "‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ", "‡§∏‡•Ç‡§∞‡•ç‡§Ø", "‡§π‡§æ‡§µ‡§æ"],
    },
    correct: 2,
  },
];

const Quiz = () => {
  const context = useLanguage();
  const lang = context?.lang ?? "en";
  const translations = context?.translations ?? {
    title: lang === "ne" ? "‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•ç‡§µ‡§ø‡§ú" : "Weather Quiz",
    enterName: lang === "ne" ? "‡§Ü‡§´‡•ç‡§®‡•ã ‡§®‡§æ‡§Æ ‡§™‡•ç‡§∞‡§µ‡§ø‡§∑‡•ç‡§ü ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç:" : "Enter your name:",
    namePlaceholder: lang === "ne" ? "‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§®‡§æ‡§Æ" : "Your name",
    selectLevel: lang === "ne" ? "‡§∏‡•ç‡§§‡§∞ ‡§õ‡§æ‡§®‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç:" : "Select a level to begin:",
    levelEasy: lang === "ne" ? "‡§∏‡§ú‡§ø‡§≤‡•ã" : "Easy",
    levelMedium: lang === "ne" ? "‡§Æ‡§ß‡•ç‡§Ø‡§Æ" : "Medium",
    levelHard: lang === "ne" ? "‡§ï‡§†‡§ø‡§®" : "Hard",
    nameError: lang === "ne" ? "‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡•Å‡§∞‡•Å ‡§ó‡§∞‡•ç‡§® ‡§Ü‡§´‡•ç‡§®‡•ã ‡§®‡§æ‡§Æ ‡§™‡•ç‡§∞‡§µ‡§ø‡§∑‡•ç‡§ü ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç!" : "Please enter your name to start!",
    player: lang === "ne" ? "‡§ñ‡•á‡§≤‡§æ‡§°‡•Ä" : "Player",
    score: lang === "ne" ? "‡§Ö‡§Ç‡§ï" : "Score",
    question: lang === "ne" ? "‡§™‡•ç‡§∞‡§∂‡•ç‡§®" : "Question",
    timeLeft: lang === "ne" ? "‡§∏‡•ç‡§§‡§∞‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§¨‡§æ‡§Å‡§ï‡•Ä ‡§∏‡§Æ‡§Ø" : "Time Left for Level",
    seconds: lang === "ne" ? "‡§∏‡•á‡§ï‡•á‡§®‡•ç‡§°" : "s",
    correct: lang === "ne" ? "‡§∏‡§π‡•Ä!" : "Correct!",
    wrong: lang === "ne" ? "‡§ó‡§≤‡§§!" : "Wrong!",
    gameOver: lang === "ne" ? "‡§ñ‡•á‡§≤ ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§!" : "Game Over!",
    wizard: lang === "ne" ? "‡§Æ‡•å‡§∏‡§Æ ‡§ú‡§æ‡§¶‡•Å‡§ó‡§∞! üåü" : "Weather Wizard! üåü",
    greatJob: lang === "ne" ? "‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü ‡§ï‡§æ‡§Æ! üëç" : "Great Job! üëç",
    goodEffort: lang === "ne" ? "‡§∞‡§æ‡§Æ‡•ç‡§∞‡•ã ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏! üòä" : "Good Effort! üòä",
    keepLearning: lang === "ne" ? "‡§∏‡§ø‡§ï‡•ç‡§® ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§æ‡§ñ‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç! üìö" : "Keep Learning! üìö",
    finalScore: lang === "ne" ? "‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§Ö‡§®‡•ç‡§§‡§ø‡§Æ ‡§Ö‡§Ç‡§ï" : "Your final score",
    percentage: lang === "ne" ? "‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§" : "Percentage",
    highScorePrefix: lang === "ne" ? "‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§â‡§ö‡•ç‡§ö ‡§Ö‡§Ç‡§ï" : "High Score for",
    playAgain: lang === "ne" ? "‡§´‡•á‡§∞‡§ø ‡§ñ‡•á‡§≤‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç" : "Play Again",
    highScores: lang === "ne" ? "‡§â‡§ö‡•ç‡§ö ‡§Ö‡§Ç‡§ï‡§π‡§∞‡•Ç" : "High Scores",
    level: lang === "ne" ? "‡§∏‡•ç‡§§‡§∞" : "Level",
    playerHeader: lang === "ne" ? "‡§ñ‡•á‡§≤‡§æ‡§°‡•Ä" : "Player",
    scoreHeader: lang === "ne" ? "‡§Ö‡§Ç‡§ï" : "Score",
    loading: lang === "ne" ? "‡§≤‡•ã‡§° ‡§π‡•Å‡§Å‡§¶‡•à..." : "Loading...",
    loadingMessage: lang === "ne" ? "‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§§‡§Ø‡§æ‡§∞ ‡§π‡•Å‡§Å‡§¶‡§æ‡§∏‡§Æ‡•ç‡§Æ ‡§™‡§∞‡•ç‡§ñ‡§®‡•Å‡§π‡•ã‡§∏‡•ç‡•§" : "Please wait while the quiz is being prepared.",
  };
  const [level, setLevel] = useState<"easy" | "medium" | "hard" | null>(null);
  const [currentQ, setCurrentQ] = useState(0);
  const [score, setScore] = useState(0);
  const [gameOver, setGameOver] = useState(false);
  const [timeLeft, setTimeLeft] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);
  const [showFeedback, setShowFeedback] = useState(false);
  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);
  const [playerName, setPlayerName] = useState("");
  const [highScores, setHighScores] = useState<{
    easy: HighScore | null;
    medium: HighScore | null;
    hard: HighScore | null;
  }>({
    easy: null,
    medium: null,
    hard: null,
  });
  const [shuffledQuestions, setShuffledQuestions] = useState<Question[]>([]);

  const shuffleArray = <T,>(array: T[]): T[] => {
    const shuffled = [...array];
    for (let i = shuffled.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    return shuffled;
  };

  const getQuestions = useCallback(() => {
    if (level === "easy") return easyQuestions;
    if (level === "medium") return mediumQuestions;
    if (level === "hard") return hardQuestions;
    return [];
  }, [level]);

  const getTimerDuration = useCallback(() => {
    if (level === "easy") return 60;
    if (level === "medium") return 90;
    if (level === "hard") return 120;
    return 60;
  }, [level]);

  const getPoints = useCallback(() => {
    if (level === "easy") return 5;
    if (level === "medium") return 10;
    if (level === "hard") return 20;
    return 5;
  }, [level]);

  useEffect(() => {
    // Load high scores from localStorage on mount
    const storedHighScores = localStorage.getItem("weatherQuizHighScores");
    if (storedHighScores) {
      try {
        setHighScores(JSON.parse(storedHighScores));
      } catch (error) {
        console.error("Failed to parse high scores:", error);
      }
    }
  }, []);

  useEffect(() => {
    // Shuffle questions when level is selected
    if (level && shuffledQuestions.length === 0) {
      const questions = getQuestions();
      if (questions.length > 0) {
        setShuffledQuestions(shuffleArray(questions));
      }
    }
  }, [level, getQuestions, shuffledQuestions.length]);

  useEffect(() => {
    // Timer logic for entire level
    if (level && !gameOver && shuffledQuestions.length > 0) {
      setTimeLeft(getTimerDuration());
      const timer = setInterval(() => {
        setTimeLeft((prev) => {
          if (prev <= 1) {
            clearInterval(timer);
            setGameOver(true);
            return 0;
          }
          return prev - 1;
        });
      }, 1000);
      return () => clearInterval(timer);
    }
  }, [level, gameOver, getTimerDuration, shuffledQuestions.length]);

  const handleAnswer = (index: number) => {
    if (shuffledQuestions.length === 0 || showFeedback) return; // Prevent action if no questions or during feedback
    setSelectedAnswer(index);
    const q = shuffledQuestions[currentQ];
    const correct = index === q.correct;
    setIsCorrect(correct);
    if (correct) {
      setScore((prev) => prev + getPoints());
    }
    setShowFeedback(true);
    setTimeout(() => {
      setShowFeedback(false);
      setSelectedAnswer(null);
      setIsCorrect(null);
      if (currentQ + 1 < shuffledQuestions.length) {
        setCurrentQ((prev) => prev + 1);
      } else {
        setGameOver(true);
      }
    }, 1500);
  };

  const startGame = (selectedLevel: "easy" | "medium" | "hard") => {
    if (playerName.trim()) {
      setLevel(selectedLevel);
      setCurrentQ(0);
      setScore(0);
      setGameOver(false);
      setSelectedAnswer(null);
      setShowFeedback(false);
      setIsCorrect(null);
      setShuffledQuestions([]);
      setTimeLeft(getTimerDuration());
    }
  };

  const restartGame = () => {
    setLevel(null);
    setCurrentQ(0);
    setScore(0);
    setGameOver(false);
    setSelectedAnswer(null);
    setShowFeedback(false);
    setIsCorrect(null);
    setTimeLeft(0);
    setPlayerName("");
    setShuffledQuestions([]);
  };

  useEffect(() => {
    // Update high scores when game is over
    if (gameOver && level && playerName) {
      setHighScores((prev) => {
        const currentHighScore = prev[level];
        const newHighScore = { player: playerName, score };
        if (!currentHighScore || score > currentHighScore.score) {
          const updatedHighScores = { ...prev, [level]: newHighScore };
          try {
            localStorage.setItem("weatherQuizHighScores", JSON.stringify(updatedHighScores));
          } catch (error) {
            console.error("Failed to save high scores:", error);
          }
          return updatedHighScores;
        }
        return prev;
      });
    }
  }, [gameOver, level, score, playerName]);

  const renderHighScores = () => (
    <div className="high-scores-container">
      <h3>{translations.highScores}</h3>
      <table className="high-scores-table">
        <thead>
          <tr>
            <th>{translations.level}</th>
            <th>{translations.playerHeader}</th>
            <th>{translations.scoreHeader}</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>{translations.levelEasy}</td>
            <td>{highScores.easy ? highScores.easy.player : "N/A"}</td>
            <td>{highScores.easy ? highScores.easy.score : "0"}</td>
          </tr>
          <tr>
            <td>{translations.levelMedium}</td>
            <td>{highScores.medium ? highScores.medium.player : "N/A"}</td>
            <td>{highScores.medium ? highScores.medium.score : "0"}</td>
          </tr>
          <tr>
            <td>{translations.levelHard}</td>
            <td>{highScores.hard ? highScores.hard.player : "N/A"}</td>
            <td>{highScores.hard ? highScores.hard.score : "0"}</td>
          </tr>
        </tbody>
      </table>
    </div>
  );

  if (!level) {
    return (
      <div className="quiz-container">
        <h2>üå¶Ô∏è {translations.title}</h2>
        {renderHighScores()}
        <p>{translations.enterName}</p>
        <input
          type="text"
          value={playerName}
          onChange={(e) => setPlayerName(e.target.value.trim())}
          placeholder={translations.namePlaceholder}
          className="player-input"
          maxLength={20}
        />
        <p>{translations.selectLevel}</p>
        <div className="level-buttons">
          <button onClick={() => startGame("easy")} disabled={!playerName.trim()}>
            {translations.levelEasy}
          </button>
          <button onClick={() => startGame("medium")} disabled={!playerName.trim()}>
            {translations.levelMedium}
          </button>
          <button onClick={() => startGame("hard")} disabled={!playerName.trim()}>
            {translations.levelHard}
          </button>
        </div>
        {!playerName.trim() && (
          <p className="error-message">{translations.nameError}</p>
        )}
      </div>
    );
  }

  if (gameOver) {
    const totalQuestions = shuffledQuestions.length;
    const maxScore = totalQuestions * getPoints();
    const percentage = totalQuestions > 0 ? Math.round((score / maxScore) * 100) : 0;
    let message = "";
    if (percentage >= 90) {
      message = translations.wizard;
    } else if (percentage >= 70) {
      message = translations.greatJob;
    } else if (percentage >= 50) {
      message = translations.goodEffort;
    } else {
      message = translations.keepLearning;
    }
    const highScore = highScores[level];
    return (
      <div className="quiz-container">
        <h2>üèÜ {translations.gameOver}</h2>
        {renderHighScores()}
        <p>{message}</p>
        <p>
          {translations.finalScore}: {score} / {maxScore}
        </p>
        <p>
          {translations.percentage}: {percentage}%
        </p>
        <div className="progress-bar">
          <div className="progress-fill" style={{ width: `${percentage}%` }}></div>
        </div>
        {highScore && (
          <p className="high-score">
            {translations.highScorePrefix} {lang === "ne" ? (level === "easy" ? "‡§∏‡§ú‡§ø‡§≤‡•ã" : level === "medium" ? "‡§Æ‡§ß‡•ç‡§Ø‡§Æ" : "‡§ï‡§†‡§ø‡§®") : level.toUpperCase()}: {highScore.score} by {highScore.player}
          </p>
        )}
        <button onClick={restartGame}>{translations.playAgain}</button>
      </div>
    );
  }

  if (shuffledQuestions.length === 0) {
    return (
      <div className="quiz-container">
        <h2>{translations.loading}</h2>
        <p>{translations.loadingMessage}</p>
      </div>
    );
  }

  const q = shuffledQuestions[currentQ];
  const timerDuration = getTimerDuration();

  return (
    <div className="quiz-container">
      <h2>
        {translations.level}: {lang === "ne" ? (level === "easy" ? "‡§∏‡§ú‡§ø‡§≤‡•ã" : level === "medium" ? "‡§Æ‡§ß‡•ç‡§Ø‡§Æ" : "‡§ï‡§†‡§ø‡§®") : level.toUpperCase()}
      </h2>
      {renderHighScores()}
      <p>
        {translations.player}: {playerName}
      </p>
      <p>
        {translations.score}: {score}
      </p>
      <p>
        {translations.question} {currentQ + 1} of {shuffledQuestions.length}
      </p>
      <p>
        {translations.timeLeft}: {timeLeft}{translations.seconds}
      </p>
      <div className="timer-bar">
        <div
          className="timer-fill"
          style={{ width: `${(timeLeft / timerDuration) * 100}%` }}
        ></div>
      </div>
      <div className="progress-bar">
        <div
          className="progress-fill"
          style={{ width: `${((currentQ + 1) / shuffledQuestions.length) * 100}%` }}
        ></div>
      </div>
      <div className="question-box">
        <h3>{lang === "ne" ? q.question.ne : q.question.en}</h3>
        {showFeedback && (
          <p className={isCorrect ? "feedback-correct" : "feedback-wrong"}>
            {isCorrect ? translations.correct : translations.wrong}
          </p>
        )}
        <div className="options-grid">
          {(lang === "ne" ? q.options.ne : q.options.en).map((opt, idx) => (
            <button
              key={idx}
              onClick={() => handleAnswer(idx)}
              className={
                showFeedback
                  ? idx === q.correct
                    ? "correct"
                    : idx === selectedAnswer
                    ? "wrong"
                    : ""
                  : selectedAnswer === idx
                  ? "selected"
                  : ""
              }
              disabled={selectedAnswer !== null || showFeedback}
            >
              {opt}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Quiz;